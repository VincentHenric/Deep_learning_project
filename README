folder description:
- histories: the saved metrics of the model during learning (loss, val loss, policy loss, val policy loss, value loss, val value loss, and accuracies)
- images: some images used for the report
- models: the saved models
- papers: some papers

python files:
- constraints.py: implementation of the symmetry constraint for conv layers
- generators.py: implementation of the class of generators of data to feed the model during learning
- models.py: different models we tried
- save.py: code to save a dataset from a getBatch (useful to get a validation or test set)
- utils.py: some useful functions to manipulate data

notebook files:
- compare_model_performances.ipynb: a notebook where the metrics are loaded and analyzed through plots
- Vincent_learning: notebook to learn a model

To use Vincent_learning notebook:
- give a name to the filename for export (or use the name of the model you want to load) by assigning the variable "name"
- if you use a model with custom symmetry constraint, you should load it with the function keras.models.load_model(model_name, curstom_objects). Make sure you use this line and comment the other one
- to export a model with custom symmetry constraint such that it can play the tournament (problem of serialization due to custom object), you can:
  - first, save it normally
  - then, use function constraints.transfer_weights to take the weights of the model, and save them back to a new model without the symmetry constraint. You can uncomment the line in the notebook and adapt
